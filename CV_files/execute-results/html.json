{
  "hash": "31f664aaf978b555ac4e135cb407e5f1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Welcome to my Quarto website!\ndescription: |\n  Resources I found inspiring and useful when building my new site, plus notes on my customisations\ndate: 2022-12-11\nauthor: \n  - name: Manuel Moscoso-Rojas\n    #url: https://fosstodon.org/@ellakaye\nsite-url: https://ellakaye.co.uk\nimage: quarto.png\nimage-alt: |\n  The quarto logo, a blue circle divided into quadrants followed by the word 'quarto'\ncategories:\n  - Quarto\n  - distilltools\ninclude-in-header: ../../_includes/fontawesome-2up.html\nopen-graph: true\ntwitter-card:\n# will inherit title, description, image\n# to change ANYTHING about card, need to fill in EVERYTHING below\n  title: Welcome to my website!\n  description: |\n    Resources I found inspiring and useful when building my new site, plus notes on my customisations\n  image: ../../images/ES_RestrictedSample_homrate.png\n  image-alt: |\n    A square logo made from Ella Kaye's name - first name on top of last name in dark gray capital letters, separated by a horizontal bright pink line, on a very light grey background\n#  defaults to 500 x 500 summary: uncomment lines below for large card\n#  image-width: 600 \n#  image-height: 314\n#  card-style: summary_large_image \n  image-width: 500\n  image-height: 500\n  card-style: summary\ndraft: false\n---\n\n\n<!--------------- set up ----------------->\n\n\n::: {.cell}\n\n:::\n\n\n<!--------------- post content ----------------->\n\n## Why Quarto? Why now?\n\nI was very happy with my previous [website built using {distill}](../2021-05-08_welcome-distill/index.qmd). Then Quarto was released and it quickly became clear that everything that I loved about working with {distill} was true of Quarto, and then some. As a keen user of a whole suite of packages in the R Markdown ecosystem, I could see the appeal of one coherent system to produce reports, presentations, books and websites. Moreover, Quarto is the natural successor to R Markdown, bringing with it a vast range of improvements, building on what [Posit](https://posit.co) (formerly RStudio) learnt over a decade of developing the latter. When it was made clear that although Posit will maintain {distill}, all future improvements will be to Quarto, I knew it was only a matter of time before I rewrote my website once again (for the fourth time).\n\nI'm finding working with Quarto to be an absolute joy!\n\n## Resources\n\nThis post is not a guide on how to get a Quarto website up and running and styled. There are already great resources for that. These are the the ones that I found most helpful.\n\n### The basics\n\n-   My first taste of Quarto was Mine Ã‡etinkaya-Rundel's [talk](https://www.youtube.com/watch?v=6p4vOKS6Xls){target=\"_blank\"} about it at the 2022 Toronto Workshop on Reproducibility.\n\n-   The official Quarto [tutorials](https://quarto.org/docs/get-started/){target=\"_blank\"} taught me the basics.\n\n-   The official Quarto [guide](https://quarto.org/docs/guide/){target=\"_blank\"} is a treasure trove with the section on [websites](https://quarto.org/docs/websites/) being, needless to say, most helpful for the development of this site.\n\nThese two posts on making the transition from R Markdown/{distill} to Quarto were also extremely useful:\n\n-   Danielle Navarro on [porting a distill blog to Quarto](https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/){target=\"_blank\"}.\n\n-   Alison Hill's post on why [we don't talk about Quarto](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/){target=\"_blank\"}.\n\n### Going further\n\nThe above resources were enough for me to replicate the website I'd built with {distill}, but as I was putting it together, a couple of excellent posts were published that showed how much customisation was possible, and which massively increased my ambitions for my new site:\n\n-   Albert Rapp's [ultimate guide to starting a Quarto blog](https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html){target=\"_blank\"}.\n\n-   Christian Gebhard's guide on [switching to Quarto](https://jollydata.blog/posts/2022-08-06-_switching-to-quarto/switching-to-quarto.html){target=\"_blank\"}.\n\nThese two posts, in particular, gave me the inspiration and most of the know-how to create my custom home page. They also both contain helpful information on themes and styling.\n\n## My customisations AKA how long could this possibly take?\n\nI didn't think it would take too long to make some tweaks, but the more I worked on the site, the more I wanted to change. I've managed, with help, to implement customisations that I haven't seen or read about elsewhere in relation to Quarto. Getting a basic Quarto site up is relatively straight-forward (in fact, Tom Mock shows how it can be done in just [100 seconds](https://www.youtube.com/watch?v=t8qtcDyCRFA){target=\"_blank\"}), but extensive customisation, particularly when starting with a rudimentary knowledge of HTML and CSS, turned out to be pretty tricky.\n\nIn this section, I'm going to list what I think are the cool features of this site, all of which I had to learn how to implement as I went along. Some of them are Quarto-specific. Others I expect will be fairly standard to those with a more advanced knowledge of front-end web development, but may well also be new to others who, like me, have come to website-building with Quarto from a backgroud in R programming rather than HTML/CSS/JS.\n\nFor the sake of brevity, in *this* post I don't detail how I achieved these customisations. I just note what I had to learn to implement them. I intend to spin each of the points below into separate tutorial-style blog posts. If you're interested in seeing how I implemented them in the meantime, you can check out this site's [repo](https://github.com/EllaKaye/ellakaye.co.uk){target=\"_blank\"}.\n\n### Animated CSS logo\n\nMy favourite feature of my website is the logo/home link in the top left corner, which is animated on hover.[^1] To implement this, I had to learn first how to create and style the static version using HTML and CSS and then how to apply the CSS animation. I also had to figure out what HTML I could get away with using in `_quarto.yml` and the best place in that file to add the code. There were also inconsistencies between browers to contend with. I was inspired to animate my logo by [Maya Gans](https://maya.rbind.io){target=\"_blank\"}, who helped me a lot with the implementation.\n\n[^1]: This works best on a laptop/desktop but there's a hint of it on a smartphone when the logo is pressed.\n\nCreating a logo with CSS also made it possible to easily change its appearance in the light and dark modes of the site. Along the way, I also learnt [another strategy](https://github.com/quarto-dev/quarto-cli/discussions/1647){target=\"_blank\"} for using different logo images in light and dark modes, using CSS to overwrite one image file with another, which is useful if a logo doesn't lend itself to creation in CSS.\n\n### Animated navigation bar links and colours\n\nHaving animated my logo, I turned to adding an animation on hover to the rest of the links on the navigation bar and learnt more CSS in the process, including @media queries to ensure that the animations only activate when the navbar is in a row. I found a solution online for the animation itself, but figuring out how to match the colours on hover and on the link for the active page to the colour of the corresponding card on the homepage was tricky.\n\n### CSS grid and bootstrap cards\n\nSpeaking of which, creating the custom layout of my homepage, using CSS grid and bootstrap cards, was a challenge. The blog posts by Albert and Christian linked to in the previous section got me a lot of the way there, but I still had to dive deep into the [bootstrap documentation](https://getbootstrap.com/docs/5.0/getting-started/introduction/) to make sure the cards and the links inside them all lined up nicely.\n\n### Light and dark mode\n\nI put a *lot* of thought into the colour scheme for both the light and dark modes of the site, and making sure they complemented each other perfectly. For this, I built on what I'd learnt about [colour theory and accessibility when designing a custom syntax highlight scheme](../2021-05-26_custom-highlighting-distill-2/index.qmd) for my previous website. I also learnt about Sass and made extensive use of custom Sass variables.\n\n### Custom syntax highlighting\n\nHaving [implemented a custom syntax highlight theme](../2021-05-25_custom-highlighting-distill-1/index.qmd) for my {distill} site, and created a function for the [{distilltools}](../../packages/distilltools/index.qmd) package so others could do the same, I had hoped to be able to port that straight over to my Quarto site. Unfortunately, it wasn't so simple. Although they are both called `arrow`, there are changes in the implementation of the default syntax highlight scheme for Quarto from how it was implemented in {distill}, and, to make things more awkward, there are also inconsistencies between the light and dark versions of `arrow` in Quarto. It took me a while to get my head around all that. Modifying my original highlighting theme and creating a complementary theme for the dark mode was finicky.\n\n### giscus comments box light/dark toggle\n\nQuarto makes it easy to add [giscus](https://giscus.app){target=\"_blank\"} comments boxes, and giscus (and in turn Quarto) make it simple to select from a handful of different themes to style those boxes. There are a selection of light and dark themes, and one option to set the default light or dark theme dynamically based on your computer system setting. There was not, however, an obvious way of making the theme of the giscus box change responsively on toggling the light/dark switch. In response to my query, with a lot of back and forth, Sage (the creator of giscus) figured out the [JavaScript to make this happen](https://github.com/giscus/giscus/issues/336#issuecomment-1214366281){target=\"_blank\"} and I figured out how to [integrate it into the Quarto site](https://github.com/giscus/giscus/issues/336#issuecomment-1214401296){target=\"_blank\"}.\n\nI would like to apply custom CSS to the giscus comments box in both light and dark modes, which should be possible. I haven't yet been able to make it work, though, which appears to be an [issue](https://github.com/giscus/giscus/issues/789){target=\"_blank\"} related to hosting on Netlify.\n\n### Local fonts and open type font features\n\nBecause I'm interested in typography and think that professional fonts are worth paying for, and in order to give my site a distinct appearance, I purchased licenses for [Lemon Milk Pro](){target=\"_blank\"} (used for body and header text) and [MonoLisa](https://www.monolisa.dev){target=\"_blank\"} (used for code). Having done so, I then had to learn the CSS/Sass to apply the local font files to the site. I also learnt all about [open type font features](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/OpenType_fonts_guide), and how to turn them on and off using CSS. I needed this to turn off the default coding ligatures in MonoLisa.[^2]\n\n[^2]: As much as I love coding ligatures when writing code for myself, I prefer not to use them when demonstrating code to others as it's not then clear what they have to type to replicate it.\n\n### Icon links\n\nAs on my {distill} site, I've made copious use of the `icon_link()` function in my [{distilltools}](https://github.com/EllaKaye/distilltools/){target=\"_blank\"} package, a handy R function that creates a link, with an icon and some text that, with some additional CSS, can be styled a bit like a button, e.g. the code\n\nhttps://ellakaye.co.uk/contact.html\n\n``` r\ndistilltools::icon_link(\n  icon = \"github\",\n  text = \"site repo\",\n  url = \"https://github.com/EllaKaye/ellakaye.co.uk\"\n)\n```\n",
    "supporting": [
      "CV_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}